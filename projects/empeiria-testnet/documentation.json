{
  "documentation": [
    {
      "id": "section-1755250336560",
      "title": "Empeiria",
      "icon": "⚙️",
      "type": "section",
      "children": [
        {
          "id": "page-1755250356256",
          "title": "Empeiria Testnet Node Installation Guide",
          "icon": "📕",
          "type": "page",
          "content": "# Empeiria Testnet Node Installation Guide\n\n## 📋 System Requirements\n\n- **CPU:** 4 Cores\n- **RAM:** 8GB\n- **Storage:** 200GB NVME SSD\n- **OS:** Ubuntu 20.04/22.04\n\n\n\n## 🔧 Manual Installation Steps\n\n### 1. System Update and Dependencies\n\n```bash\n# Update system\nsudo apt update && sudo apt upgrade -y\n\n# Install required packages\nsudo apt install curl git wget htop tmux build-essential jq make lz4 gcc unzip -y\n```\n\n### 2. Install Go\n\n```bash\ncd $HOME\nVER=\"1.22.3\"\nwget \"https://golang.org/dl/go$VER.linux-amd64.tar.gz\"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf \"go$VER.linux-amd64.tar.gz\"\nrm \"go$VER.linux-amd64.tar.gz\"\n\n# Set PATH\n[ ! -f ~/.bash_profile ] && touch ~/.bash_profile\necho \"export PATH=$PATH:/usr/local/go/bin:~/go/bin\" >> ~/.bash_profile\nsource $HOME/.bash_profile\n[ ! -d ~/go/bin ] && mkdir -p ~/go/bin\n```\n\n### 3. Set Variables\n\n```bash\n# Replace MONIKER and WALLET with your own values\necho \"export WALLET=\"wallet\"\" >> $HOME/.bash_profile\necho \"export MONIKER=\"test\"\" >> $HOME/.bash_profile\necho \"export EMPED_CHAIN_ID=\"empe-testnet-2\"\" >> $HOME/.bash_profile\necho \"export EMPED_PORT=\"28\"\" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n```\n\n### 4. Download and Install Binary\n\n```bash\ncd $HOME\nrm -rf bin\nmkdir bin\ncd $HOME/bin\n\n# Download binary\ncurl -LO https://github.com/empe-io/empe-chain-releases/raw/master/v0.4.0/emped_v0.4.0_linux_amd64.tar.gz\ntar -xvf emped_v0.4.0_linux_amd64.tar.gz\nchmod +x $HOME/bin/emped\nmv $HOME/bin/emped ~/go/bin\n```\n\n### 5. Configure and Initialize Node\n\n```bash\n# Configure node\nemped config node tcp://localhost:${EMPED_PORT}657\nemped config keyring-backend os\nemped config chain-id empe-testnet-2\nemped init \"$MONIKER\" --chain-id empe-testnet-2\n\n# Download genesis and addrbook\nwget -O $HOME/.empe-chain/config/genesis.json https://server-5.itrocket.net/testnet/empeiria/genesis.json\nwget -O $HOME/.empe-chain/config/addrbook.json https://server-5.itrocket.net/testnet/empeiria/addrbook.json\n```\n\n### 6. Set Seeds and Peers\n\n```bash\nSEEDS=\"20ca5fc4882e6f975ad02d106da8af9c4a5ac6de@empeiria-testnet-seed.itrocket.net:28656\"\nPEERS=\"03aa072f917ed1b79a14ea2cc660bc3bac787e82@empeiria-testnet-peer.itrocket.net:28656,e058f20874c7ddf7d8dc8a6200ff6c7ee66098ba@65.109.93.124:29056,6060deaa35729321c2f23c8d3b4938e1440083f9@65.109.30.13:11656,14323d45d516ef8050c3665bdeda3941563a13d4@37.252.186.231:26656,55313aad80d2c69afc83d0cf345322b6092af174@209.97.173.55:11156,5ef5a43264a2f0feb69c0ed16b69c13772e5b97a@144.76.202.120:41656,cbe1bfc8ee1a15a5e32ba85e0944d17812b5b244@65.21.67.40:34656,b2a794a9d1b4b398b55d2aeb48d6086fd71801b3@167.235.39.5:60756,5fc98f2ec4b2a6001aa5655c9852d259e83a8e74@65.108.226.44:11256,c6710b8f443b5f4bfff109a355b12645b652962c@46.250.234.174:28656,a6c9179841c6c7b5d627dfb3c650fe43fcf6abb2@209.209.8.66:28656\"\n\nsed -i -e \"/^\\[p2p\\]/,/^\\[/{s/^[[:space:]]*seeds *=.*/seeds = \\\"$SEEDS\\\"/}\" \\\n       -e \"/^\\[p2p\\]/,/^\\[/{s/^[[:space:]]*persistent_peers *=.*/persistent_peers = \\\"$PEERS\\\"/}\" $HOME/.empe-chain/config/config.toml\n```\n\n### 7. Port Configuration\n\n```bash\n# app.toml ports\nsed -i.bak -e \"s%:1317%:${EMPED_PORT}317%g;\ns%:8080%:${EMPED_PORT}080%g;\ns%:9090%:${EMPED_PORT}090%g;\ns%:9091%:${EMPED_PORT}091%g;\ns%:8545%:${EMPED_PORT}545%g;\ns%:8546%:${EMPED_PORT}546%g;\ns%:6065%:${EMPED_PORT}065%g\" $HOME/.empe-chain/config/app.toml\n\n# config.toml ports\nsed -i.bak -e \"s%:26658%:${EMPED_PORT}658%g;\ns%:26657%:${EMPED_PORT}657%g;\ns%:6060%:${EMPED_PORT}060%g;\ns%:26656%:${EMPED_PORT}656%g;\ns%^external_address = \\\"\\\"%external_address = \\\"$(wget -qO- eth0.me):${EMPED_PORT}656\\\"%;\ns%:26660%:${EMPED_PORT}660%g\" $HOME/.empe-chain/config/config.toml\n```\n\n### 8. Configure Pruning and Other Settings\n\n```bash\n# Pruning configuration\nsed -i -e \"s/^pruning *=.*/pruning = \\\"custom\\\"/\" $HOME/.empe-chain/config/app.toml \nsed -i -e \"s/^pruning-keep-recent *=.*/pruning-keep-recent = \\\"100\\\"/\" $HOME/.empe-chain/config/app.toml\nsed -i -e \"s/^pruning-interval *=.*/pruning-interval = \\\"19\\\"/\" $HOME/.empe-chain/config/app.toml\n\n# Set minimum gas price and indexer\nsed -i 's|minimum-gas-prices =.*|minimum-gas-prices = \"0.0001uempe\"|g' $HOME/.empe-chain/config/app.toml\nsed -i -e \"s/prometheus = false/prometheus = true/\" $HOME/.empe-chain/config/config.toml\nsed -i -e \"s/^indexer *=.*/indexer = \\\"null\\\"/\" $HOME/.empe-chain/config/config.toml\n```\n\n### 9. Create Systemd Service\n\n```bash\nsudo tee /etc/systemd/system/emped.service > /dev/null <<EOF\n[Unit]\nDescription=Empeiria node\nAfter=network-online.target\n[Service]\nUser=$USER\nWorkingDirectory=$HOME/.empe-chain\nExecStart=$(which emped) start --home $HOME/.empe-chain\nRestart=on-failure\nRestartSec=5\nLimitNOFILE=65535\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n\n### 10. Download Snapshot (Optional - Fast Sync)\n\n```bash\n# Reset database\nemped tendermint unsafe-reset-all --home $HOME/.empe-chain\n\n# Download and extract snapshot\nif curl -s --head curl https://server-5.itrocket.net/testnet/empeiria/empeiria_2025-08-15_6272919_snap.tar.lz4 | head -n 1 | grep \"200\" > /dev/null; then\n  curl https://server-5.itrocket.net/testnet/empeiria/empeiria_2025-08-15_6272919_snap.tar.lz4 | lz4 -dc - | tar -xf - -C $HOME/.empe-chain\nelse\n  echo \"No snapshot found\"\nfi\n```\n\n### 11. Start Service\n\n```bash\n# Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable emped\nsudo systemctl restart emped\n\n# Check logs\nsudo journalctl -u emped -fo cat\n```\n\n## 💰 Wallet Management\n\n### Create New Wallet\n\n```bash\n# Create new wallet (save the mnemonic!)\nemped keys add $WALLET\n```\n\n### Recover Existing Wallet\n\n```bash\n# Recover wallet using mnemonic\nemped keys add $WALLET --recover\n```\n\n### Save Wallet Addresses\n\n```bash\n# Save addresses to variables\nWALLET_ADDRESS=$(emped keys show $WALLET -a)\nVALOPER_ADDRESS=$(emped keys show $WALLET --bech val -a)\necho \"export WALLET_ADDRESS=\"$WALLET_ADDRESS >> $HOME/.bash_profile\necho \"export VALOPER_ADDRESS=\"$VALOPER_ADDRESS >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n```\n\n### Check Balance\n\n```bash\nemped query bank balances $WALLET_ADDRESS\n```\n\n## 🔄 Sync Status Check\n\n### Simple Check\n\n```bash\n# When output is false, node is fully synced\nemped status 2>&1 | jq .result.sync_info.catching_up\n```\n\n### Detailed Sync Monitor Script\n\n```bash\n#!/bin/bash\nrpc_port=$(grep -m 1 -oP '^laddr = \"\\K[^\"]+' \"$HOME/.empe-chain/config/config.toml\" | cut -d ':' -f 3)\nwhile true; do\n  local_height=$(curl -s localhost:$rpc_port/status | jq -r '.result.sync_info.latest_block_height')\n  network_height=$(curl -s https://empeiria-testnet-rpc.itrocket.net/status | jq -r '.result.sync_info.latest_block_height')\n\n  if ! [[ \"$local_height\" =~ ^[0-9]+$ ]] || ! [[ \"$network_height\" =~ ^[0-9]+$ ]]; then\n    echo -e \"\\033[1;31mError: Invalid block height data. Retrying...\\033[0m\"\n    sleep 5\n    continue\n  fi\n\n  blocks_left=$((network_height - local_height))\n  echo -e \"\\033[1;33mNode Height:\\033[1;34m $local_height\\033[0m \\033[1;33m| Network Height:\\033[1;36m $network_height\\033[0m \\033[1;33m| Blocks Left:\\033[1;31m $blocks_left\\033[0m\"\n  sleep 5\ndone\n```\n\n## 🎯 Create Validator\n\n**IMPORTANT:** Create validator only after your node is fully synced and you have sufficient tokens.\n\n```bash\nemped tx staking create-validator \\\n--amount 1000000uempe \\\n--from $WALLET \\\n--commission-rate 0.1 \\\n--commission-max-rate 0.2 \\\n--commission-max-change-rate 0.01 \\\n--min-self-delegation 1 \\\n--pubkey $(emped tendermint show-validator) \\\n--moniker \"$MONIKER\" \\\n--identity \"\" \\\n--website \"\" \\\n--details \"Your validator description\" \\\n--chain-id empe-testnet-2 \\\n--gas auto --gas-adjustment 1.5 --fees 30uempe \\\n-y\n```\n\n## 🛡️ Security Settings\n\n### Firewall Configuration\n\n```bash\n# Default firewall rules\nsudo ufw default allow outgoing \nsudo ufw default deny incoming \nsudo ufw allow ssh/tcp \nsudo ufw allow ${EMPED_PORT}656/tcp\nsudo ufw enable\n```\n\n### SSH Security\n\n- Use SSH keys\n- Disable password authentication\n- Disable root login\n- Change SSH port\n\n## 📊 Useful Commands\n\n### Service Management\n\n```bash\n# Restart service\nsudo systemctl restart emped\n\n# Stop service\nsudo systemctl stop emped\n\n# Start service\nsudo systemctl start emped\n\n# Check service status\nsudo systemctl status emped\n\n# View logs\nsudo journalctl -u emped -fo cat\n\n# View last 100 log lines\nsudo journalctl -u emped -n 100 --no-pager\n\n# Follow logs in real-time\nsudo journalctl -u emped -f\n```\n\n### Node Information\n\n```bash\n# View node info\nemped status 2>&1 | jq\n\n# Get node ID\nemped tendermint show-node-id\n\n# View validator info\nemped query staking validator $VALOPER_ADDRESS\n\n# List all validators\nemped query staking validators --limit 1000 -o json | jq\n\n# Check jail status\nemped query staking validator $VALOPER_ADDRESS -o json | jq .jailed\n```\n\n### Token Operations\n\n```bash\n# Send tokens\nemped tx bank send $WALLET_ADDRESS <RECEIVER_ADDRESS> 1000000uempe --chain-id empe-testnet-2 --gas auto --gas-adjustment 1.5 --fees 30uempe -y\n\n# Delegate\nemped tx staking delegate $VALOPER_ADDRESS 1000000uempe --from $WALLET --chain-id empe-testnet-2 --gas auto --gas-adjustment 1.5 --fees 30uempe -y\n\n# Redelegate\nemped tx staking redelegate $VALOPER_ADDRESS <TARGET_VALOPER_ADDRESS> 1000000uempe --from $WALLET --chain-id empe-testnet-2 --gas auto --gas-adjustment 1.5 --fees 30uempe -y\n\n# Withdraw rewards\nemped tx distribution withdraw-all-rewards --from $WALLET --chain-id empe-testnet-2 --gas auto --gas-adjustment 1.5 --fees 30uempe -y\n\n# Withdraw commission\nemped tx distribution withdraw-rewards $VALOPER_ADDRESS --from $WALLET --commission --chain-id empe-testnet-2 --gas auto --gas-adjustment 1.5 --fees 30uempe -y\n```\n\n### Governance\n\n```bash\n# List all proposals\nemped query gov proposals\n\n# View proposal details\nemped query gov proposal <PROPOSAL_ID>\n\n# Vote\nemped tx gov vote <PROPOSAL_ID> yes --from $WALLET --chain-id empe-testnet-2 --gas auto --gas-adjustment 1.5 --fees 30uempe -y\n```\n\n## 🔄 Node Update\n\n```bash\n# Stop service\nsudo systemctl stop emped\n\n# Download and install new binary\ncd $HOME/bin\ncurl -LO <NEW_BINARY_URL>\ntar -xvf <NEW_BINARY_TAR>\nchmod +x $HOME/bin/emped\nmv $HOME/bin/emped ~/go/bin\n\n# Start service\nsudo systemctl restart emped\nsudo journalctl -u emped -fo cat\n```\n\n## 🗑️ Complete Node Removal\n\n```bash\n# Stop and disable service\nsudo systemctl stop emped\nsudo systemctl disable emped\n\n# Remove files\nsudo rm -rf /etc/systemd/system/emped.service\nsudo rm $(which emped)\nsudo rm -rf $HOME/.empe-chain\nsudo rm -rf $HOME/bin\n\n# Clean variables\nsed -i \"/EMPED_/d\" $HOME/.bash_profile\nsed -i \"/WALLET/d\" $HOME/.bash_profile\nsed -i \"/MONIKER/d\" $HOME/.bash_profile\nsource $HOME/.bash_profile\n```\n\n## ⚠️ Troubleshooting\n\n### Node Not Syncing\n\n```bash\n# Check peers\ncurl -s localhost:${EMPED_PORT}657/net_info | jq .result.n_peers\n\n# Add new peers\nPEERS=\"<NEW_PEER_LIST>\"\nsed -i.bak -e \"s/^persistent_peers *=.*/persistent_peers = \\\"$PEERS\\\"/\" $HOME/.empe-chain/config/config.toml\nsudo systemctl restart emped\n```\n\n### Unjail Validator\n\n```bash\nemped tx slashing unjail --from $WALLET --chain-id empe-testnet-2 --gas auto --gas-adjustment 1.5 --fees 30uempe -y\n```\n\n### Database Cleanup\n\n```bash\n# Stop service\nsudo systemctl stop emped\n\n# Clean database\nemped tendermint unsafe-reset-all --home $HOME/.empe-chain --keep-addr-book\n\n# Download snapshot (see step 10 above)\n\n# Start service\nsudo systemctl restart emped\n```\n\n## 📈 Monitoring\n\n### Simple Monitoring Script\n\n```bash\n#!/bin/bash\nwhile true; do\n    clear\n    echo \"================================\"\n    echo \"     EMPEIRIA NODE MONITOR      \"\n    echo \"================================\"\n    echo \"\"\n    \n    # Node status\n    STATUS=$(emped status 2>&1 | jq -r '.result.sync_info')\n    echo \"Block Height: $(echo $STATUS | jq -r '.latest_block_height')\"\n    echo \"Sync Status: $(echo $STATUS | jq -r '.catching_up')\"\n    echo \"\"\n    \n    # Validator info\n    VALIDATOR=$(emped query staking validator $VALOPER_ADDRESS -o json 2>/dev/null)\n    if [ ! -z \"$VALIDATOR\" ]; then\n        echo \"Validator Status: $(echo $VALIDATOR | jq -r '.status')\"\n        echo \"Jailed: $(echo $VALIDATOR | jq -r '.jailed')\"\n        echo \"Token Amount: $(echo $VALIDATOR | jq -r '.tokens')\"\n    fi\n    \n    sleep 10\ndone\n```\n\n## 📝 Notes\n\n- **Minimum Stake:** 1,000,000 uempe (1 EMPE)\n- **Port Range:** Default port is 28, all ports are configured based on this value\n- **Pruning:** custom: 100/0/19 optimizes disk usage\n- **Gas Settings:** Auto gas is recommended\n\n\n\n---\n\n**⚡ Last Updated:** August 2025  \n**📌 Chain ID:** empe-testnet-2  \n**🔖 Version:** v0.4.0"
        }
      ]
    }
  ],
  "projectInfo": {
    "name": "Empeiria",
    "logo": "https://raw.githubusercontent.com/coinsspor/coinsspor/refs/heads/main/empeiria.webp",
    "banner": "https://raw.githubusercontent.com/coinsspor/coinsspor/refs/heads/main/Empeiriabanner.jpeg",
    "description": "Empeiria Testnet",
    "theme": {
      "primary": "#10b981",
      "secondary": "#8b5cf6"
    }
  },
  "lastUpdated": "2025-08-15T09:33:58.215Z",
  "projectId": "empeiria-testnet",
  "version": "1.0.0"
}