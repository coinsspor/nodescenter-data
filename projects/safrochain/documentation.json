{
  "documentation": [
    {
      "id": "page-1759863842385",
      "title": "Safrochain Cosmovisor Node Installation Guide",
      "icon": "🔧",
      "type": "page",
      "content": "# 🌌 Safrochain Cosmovisor Node Installation Guide\n\n![Cosmos SDK](https://img.shields.io/badge/Cosmos%20SDK-v0.50.13-blue)\n![Go](https://img.shields.io/badge/Go-1.23.9-00ADD8)\n![Version](https://img.shields.io/badge/Version-v0.1.0-green)\n![Cosmovisor](https://img.shields.io/badge/Cosmovisor-Latest-purple)\n![libwasmvm](https://img.shields.io/badge/libwasmvm-v2.0.1-orange)\n\n**LAST TEST:** 07.10.2025 - Successful ✅\n\n## 📋 Contents\n\n- [System Requirements](#-system-requirements)\n- [Variables](#-variables)\n- [Installation](#-installation)\n- [Service Management](#-service-management)\n- [Useful Commands](#-useful-commands)\n- [Troubleshooting](#-troubleshooting)\n- [Complete Node Removal](#-complete-node-removal)\n\n## 🖥️ System Requirements\n\n| Component | Minimum | Recommended |\n|-----------|---------|-------------|\n| CPU | 4 vCPU | 8 vCPU |\n| RAM | 8 GB | 16 GB |\n| Storage | 200 GB SSD | 500 GB NVMe |\n| OS | Ubuntu 20.04 | Ubuntu 22.04 |\n| Bandwidth | 100 Mbps | 1 Gbps |\n\n## 🔧 Variables\n\n**IMPORTANT:** Replace these variables with your own values before installation:\n\n```bash\n# Enter your own values\nexport MONIKER=\"YOUR_NODE_NAME\"        # Your node name\nexport PORT_PREFIX=\"53\"                 # Your desired port prefix (10-65)\nexport WALLET_NAME=\"wallet\"            # Wallet name\n```\n\n## 🚀 Installation\n\n### 1️⃣ System Update and Required Packages\n\n```bash\n# Go to home directory\ncd $HOME\n\n# System update\nsudo apt update && sudo apt upgrade -y\nsudo apt install -y curl git wget htop tmux build-essential jq make lz4 gcc unzip\n```\n\n### 2️⃣ Go 1.23.9 Installation\n\n**IMPORTANT:** Safrochain requires Go 1.23.9!\n\n```bash\ncd $HOME\nsudo rm -rf /usr/local/go\nwget \"https://golang.org/dl/go1.23.9.linux-amd64.tar.gz\"\nsudo tar -C /usr/local -xzf \"go1.23.9.linux-amd64.tar.gz\"\nrm \"go1.23.9.linux-amd64.tar.gz\"\n\n# Go PATH settings\necho 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin' >> ~/.bash_profile\nsource ~/.bash_profile\n\n# Version check\ngo version\n# Expected output: go version go1.23.9 linux/amd64\n```\n\n### 3️⃣ Save Variables\n\n```bash\n# Make variables permanent\necho \"export MONIKER=\\\"$MONIKER\\\"\" >> $HOME/.bash_profile\necho \"export WALLET_NAME=\\\"$WALLET_NAME\\\"\" >> $HOME/.bash_profile\necho \"export PORT_PREFIX=\\\"$PORT_PREFIX\\\"\" >> $HOME/.bash_profile\necho \"export SAFROCHAIN_PORT=\\\"${PORT_PREFIX}\\\"\" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n\n# Check\necho \"Moniker: $MONIKER\"\necho \"Port Prefix: $PORT_PREFIX\"\necho \"Wallet: $WALLET_NAME\"\n```\n\n### 4️⃣ Binary Installation\n\n```bash\n# Make sure you are in the home directory\ncd $HOME\n\n# Clean existing folder\nrm -rf safrochain-node\n\n# Clone repository\ngit clone https://github.com/Safrochain-Org/safrochain-node.git\ncd safrochain-node\ngit checkout v0.1.0\n\n# Compile (Will work directly with Go 1.23.9)\nmake install\n\n# NOTE: \"cp: cannot stat '/safrochaind'\" error is negligible, ignore it\n# This is a minor bug in the Makefile but the binary compiles successfully\n\n# Binary check\nls -la ~/go/bin/safrochaind\n# Binary should be visible: -rwxr-xr-x 1 root root 162249280 ... /root/go/bin/safrochaind\n```\n\n### 5️⃣ libwasmvm v2.0.1 Installation (CRITICAL!)\n\n**IMPORTANT:** \n- Safrochain ONLY tested and works with libwasmvm v2.0.1\n- v2.2.4, v1.x or other versions DEFINITELY DO NOT WORK!\n- You must install libwasmvm in the safrochain-node/lib directory (Cosmovisor will look at this location)\n\n```bash\n# Go to Safrochain directory\ncd ~/safrochain-node\n\n# Create lib directory\nmkdir -p lib\ncd lib\n\n# Download libwasmvm v2.0.1 (ONLY TESTED AND WORKING VERSION!)\nwget https://github.com/CosmWasm/wasmvm/releases/download/v2.0.1/libwasmvm.x86_64.so -O libwasmvm.so\nchmod +x libwasmvm.so\n\n# Test\ncd ~/safrochain-node\nLD_LIBRARY_PATH=./lib ~/go/bin/safrochaind version\n\n# Expected output: v0.1.0\n# This output MUST appear, otherwise don't continue!\n```\n\n### 6️⃣ Cosmovisor Installation\n\n```bash\n# Install Cosmovisor\ngo install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@latest\n\n# Create directory structure\nmkdir -p $HOME/.safrochain/cosmovisor/genesis/bin\nmkdir -p $HOME/.safrochain/cosmovisor/upgrades\n\n# Copy libwasmvm to Cosmovisor directory (as backup)\ncp $HOME/safrochain-node/lib/libwasmvm.so $HOME/.safrochain/cosmovisor/genesis/bin/\n\n# Create symlink\nsudo ln -s $HOME/.safrochain/cosmovisor/genesis $HOME/.safrochain/cosmovisor/current -f\n```\n\n### 7️⃣ Wrapper Script for Cosmovisor (MANDATORY!)\n\n**CRITICAL:** \n- Wrapper script is ESSENTIAL for Cosmovisor to find libwasmvm!\n- DO NOT use `exec` or `export` in wrapper script! (Critical, otherwise it won't work)\n- Only use `cd` and direct `LD_LIBRARY_PATH`\n\n```bash\n# CREATE WRAPPER SCRIPT (with name safrochaind)\ncat > $HOME/.safrochain/cosmovisor/genesis/bin/safrochaind << 'EOF'\n#!/bin/bash\ncd /root/safrochain-node\nLD_LIBRARY_PATH=./lib /root/go/bin/safrochaind \"$@\"\nEOF\n\n# Make executable\nchmod +x $HOME/.safrochain/cosmovisor/genesis/bin/safrochaind\n\n# Test\n$HOME/.safrochain/cosmovisor/genesis/bin/safrochaind version\n# Expected output: v0.1.0\n\n# If v0.1.0 doesn't appear, there's a problem with the wrapper script!\n```\n\n### 8️⃣ Node Initialization and Configuration\n\n```bash\n# Initialize (with wrapper)\n$HOME/.safrochain/cosmovisor/genesis/bin/safrochaind init \"$MONIKER\" --chain-id safro-testnet-1\n\n# Manually create client.toml (config commands don't work)\nmkdir -p $HOME/.safrochain/config\n\ncat > $HOME/.safrochain/config/client.toml << EOF\nchain-id = \"safro-testnet-1\"\nkeyring-backend = \"file\"\noutput = \"text\"\nnode = \"tcp://localhost:${PORT_PREFIX}657\"\nbroadcast-mode = \"sync\"\nEOF\n```\n\n### 9️⃣ Port Configuration\n\n```bash\n# config.toml port settings\nsed -i -e \"s%^proxy_app = \\\"tcp://127.0.0.1:26658\\\"%proxy_app = \\\"tcp://127.0.0.1:${PORT_PREFIX}658\\\"%; s%^laddr = \\\"tcp://127.0.0.1:26657\\\"%laddr = \\\"tcp://127.0.0.1:${PORT_PREFIX}657\\\"%; s%^pprof_laddr = \\\"localhost:6060\\\"%pprof_laddr = \\\"localhost:${PORT_PREFIX}060\\\"%; s%^laddr = \\\"tcp://0.0.0.0:26656\\\"%laddr = \\\"tcp://0.0.0.0:${PORT_PREFIX}656\\\"%; s%^prometheus_listen_addr = \\\":26660\\\"%prometheus_listen_addr = \\\":${PORT_PREFIX}660\\\"%\" $HOME/.safrochain/config/config.toml\n\n# app.toml port settings\nsed -i -e \"s%^address = \\\"tcp://localhost:1317\\\"%address = \\\"tcp://localhost:${PORT_PREFIX}317\\\"%; s%^address = \\\":8080\\\"%address = \\\":${PORT_PREFIX}080\\\"%; s%^address = \\\"localhost:9090\\\"%address = \\\"localhost:${PORT_PREFIX}090\\\"%; s%^address = \\\"localhost:9091\\\"%address = \\\"localhost:${PORT_PREFIX}091\\\"%\" $HOME/.safrochain/config/app.toml\n```\n\n### 🔟 Genesis and Addrbook\n\n```bash\n# Genesis file\nwget -O $HOME/.safrochain/config/genesis.json https://vault2.astrostake.xyz/testnet/safrochain/genesis.json\n\n# Genesis check\nif [ -f \"$HOME/.safrochain/config/genesis.json\" ]; then\n    echo \"✅ Genesis file downloaded\"\n    sha256sum $HOME/.safrochain/config/genesis.json\nelse\n    echo \"❌ Genesis file could not be downloaded!\"\n    exit 1\nfi\n\n# Addrbook\nwget -O $HOME/.safrochain/config/addrbook.json https://vault2.astrostake.xyz/testnet/safrochain/addrbook.json\n```\n\n### 1️⃣1️⃣ Seeds and Peers Settings\n\n```bash\n# Seeds\nSEEDS=\"2242a526e7841e7e8a551aabc4614e6cd612e7fb@88.99.211.113:26656\"\nsed -i -e \"s/^seeds *=.*/seeds = \\\"$SEEDS\\\"/\" $HOME/.safrochain/config/config.toml\n\n# Minimum gas price\nsed -i -e \"s/^minimum-gas-prices *=.*/minimum-gas-prices = \\\"0.001usaf\\\"/\" $HOME/.safrochain/config/app.toml\n\n# Pruning settings (optional - for disk savings)\nsed -i -e \"s/^pruning *=.*/pruning = \\\"custom\\\"/\" $HOME/.safrochain/config/app.toml\nsed -i -e \"s/^pruning-keep-recent *=.*/pruning-keep-recent = \\\"100\\\"/\" $HOME/.safrochain/config/app.toml\nsed -i -e \"s/^pruning-interval *=.*/pruning-interval = \\\"10\\\"/\" $HOME/.safrochain/config/app.toml\n```\n\n## 🎮 Service Management\n\n### Creating Systemd Service (with Cosmovisor)\n\n```bash\n# Create Cosmovisor service\nsudo tee /etc/systemd/system/safrochaind.service > /dev/null <<EOF\n[Unit]\nDescription=Safrochain Cosmovisor Node\nAfter=network-online.target\n\n[Service]\nUser=root\nExecStart=/root/go/bin/cosmovisor run start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\nEnvironment=\"DAEMON_HOME=/root/.safrochain\"\nEnvironment=\"DAEMON_NAME=safrochaind\"\nEnvironment=\"DAEMON_RESTART_AFTER_UPGRADE=true\"\nEnvironment=\"DAEMON_ALLOW_DOWNLOAD_BINARIES=false\"\nEnvironment=\"UNSAFE_SKIP_BACKUP=true\"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n\n### Starting the Service\n\n```bash\n# Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable safrochaind\nsudo systemctl start safrochaind\n\n# Check status\nsudo systemctl status safrochaind\n\n# Watch logs\njournalctl -fu safrochaind -o cat\n\n# NOTE: You may get \"port already in use\" error at first\n# Service will start working after a few restarts\n```\n\n## 🚀 Fast Sync (Snapshot)\n\nYou can use snapshot to speed up sync process:\n\n### Snapshot Download and Installation\n\n```bash\n# 1. Install lz4\nsudo apt update\nsudo apt-get install snapd lz4 -y\n\n# 2. Stop service and backup state\nsudo systemctl stop safrochaind\ncp $HOME/.safrochain/data/priv_validator_state.json $HOME/.safrochain/priv_validator_state.json.backup\n\n# 3. Clean old data\nrm -rf $HOME/.safrochain/data\nsafrochaind tendermint unsafe-reset-all --home ~/.safrochain/ --keep-addr-book\n\n# 4. Download snapshot (NodeStake snapshot - updated every 12 hours)\nSNAP_NAME=$(curl -s https://ss-t.safrochain.nodestake.org/ | egrep -o \">20.*\\.tar.lz4\" | tr -d \">\")\ncurl -o - -L https://ss-t.safrochain.nodestake.org/${SNAP_NAME} | lz4 -c -d - | tar -x -C $HOME/.safrochain\n\n# 5. Restore validator state\nmv $HOME/.safrochain/priv_validator_state.json.backup $HOME/.safrochain/data/priv_validator_state.json\n\n# 6. Start service\nsudo systemctl restart safrochaind\n\n# 7. Check logs\nsudo journalctl -fu safrochaind -o cat\n```\n\n**NOTE:** Snapshot is updated every 12 hours. If snapshot download fails, you can continue with normal sync.\n\n## 👤 Validator Operations\n\n### Wallet Creation\n\n```bash\n# Using alias (if installed)\nsafrochaind keys add $WALLET_NAME\n\n# Or manually\ncd ~/safrochain-node\nLD_LIBRARY_PATH=./lib ~/go/bin/safrochaind keys add $WALLET_NAME\n\n# KEEP YOUR SEED PHRASE IN A SAFE PLACE!\n```\n\n### Wallet Recovery\n\n```bash\n# Recover existing wallet with seed phrase\nsafrochaind keys add $WALLET_NAME --recover\n```\n\n### Balance Check\n\n```bash\n# Get your address\nsafrochaind keys show $WALLET_NAME -a\n\n# Check balance\nsafrochaind query bank balances $(safrochaind keys show $WALLET_NAME -a)\n```\n\n### Creating Validator\n\n**IMPORTANT:** Make sure you are synced and have enough tokens!\n\n```bash\n# 1. Check sync status\nsafrochaind status 2>&1 | jq .sync_info.catching_up\n# Should be false\n\n# 2. Get validator public key\nVAL_PUBKEY=$(safrochaind tendermint show-validator)\n\n# 3. Create validator config file\ncat <<EOF > /root/.safrochain/validator.json\n{\n  \"pubkey\": $VAL_PUBKEY,\n  \"amount\": \"1000000usaf\",\n  \"moniker\": \"$MONIKER\",\n  \"identity\": \"\",\n  \"website\": \"\",\n  \"security\": \"\",\n  \"details\": \"Safrochain Validator\",\n  \"commission-rate\": \"0.10\",\n  \"commission-max-rate\": \"0.20\",\n  \"commission-max-change-rate\": \"0.01\",\n  \"min-self-delegation\": \"1\"\n}\nEOF\n\n# 4. Create validator\nsafrochaind tx staking create-validator /root/.safrochain/validator.json \\\n  --from=$WALLET_NAME \\\n  --chain-id=safro-testnet-1 \\\n  --gas=auto \\\n  --gas-adjustment=1.4 \\\n  --fees=300usaf \\\n  --home ~/.safrochain \\\n  -y\n```\n\n### Edit Validator\n\n```bash\nsafrochaind tx staking edit-validator \\\n--moniker \"$MONIKER\" \\\n--identity \"<keybase_id>\" \\\n--website \"<website>\" \\\n--security-contact \"<email>\" \\\n--details \"<description>\" \\\n--commission-rate \"0.10\" \\\n--chain-id safro-testnet-1 \\\n--gas-prices 0.0001usaf \\\n--gas-adjustment 1.5 \\\n--gas auto \\\n--from $WALLET_NAME \\\n-y\n```\n\n### Delegate Tokens\n\n```bash\n# Delegate to your own validator\nsafrochaind tx staking delegate $(safrochaind keys show $WALLET_NAME --bech val -a) 1000000usaf \\\n--chain-id safro-testnet-1 \\\n--gas-prices 0.0001usaf \\\n--gas-adjustment 1.5 \\\n--gas auto \\\n--from $WALLET_NAME \\\n-y\n```\n\n### Withdraw Rewards\n\n```bash\n# Delegator rewards\nsafrochaind tx distribution withdraw-rewards $(safrochaind keys show $WALLET_NAME --bech val -a) \\\n--chain-id safro-testnet-1 \\\n--gas-prices 0.0001usaf \\\n--gas-adjustment 1.5 \\\n--gas auto \\\n--from $WALLET_NAME \\\n-y\n\n# With validator commission\nsafrochaind tx distribution withdraw-rewards $(safrochaind keys show $WALLET_NAME --bech val -a) --commission \\\n--chain-id safro-testnet-1 \\\n--gas-prices 0.0001usaf \\\n--gas-adjustment 1.5 \\\n--gas auto \\\n--from $WALLET_NAME \\\n-y\n```\n\n### Send Tokens\n\n```bash\nsafrochaind tx bank send $(safrochaind keys show $WALLET_NAME -a) <receiver_address> 1000000usaf \\\n--chain-id safro-testnet-1 \\\n--gas-prices 0.0001usaf \\\n--gas-adjustment 1.5 \\\n--gas auto \\\n-y\n```\n\n## 📊 Node Status and Information\n\n### Sync Status Check Script\n\nYou can use this script to continuously monitor sync status:\n\n```bash\n# Create sync check script\ncat > ~/safro_sync_check.sh << 'EOF'\n#!/bin/bash\n# Safrochain Sync Status Checker\n\n# Get RPC port from config\nrpc_port=$(grep -m 1 -oP '^laddr = \"\\K[^\"]+' \"$HOME/.safrochain/config/config.toml\" | cut -d ':' -f 3)\n\n# Colors\nRED='\\033[1;31m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[1;34m'\nCYAN='\\033[1;36m'\nGREEN='\\033[1;32m'\nNC='\\033[0m' # No Color\n\nwhile true; do\n  # Local node height\n  local_height=$(curl -s localhost:$rpc_port/status 2>/dev/null | jq -r '.result.sync_info.latest_block_height')\n  \n  # Network height (LinkNode RPC)\n  network_height=$(curl -s https://safrochain-testnet-rpc.linknode.org/status 2>/dev/null | jq -r '.result.sync_info.latest_block_height')\n  \n  # Error check\n  if ! [[ \"$local_height\" =~ ^[0-9]+$ ]] || ! [[ \"$network_height\" =~ ^[0-9]+$ ]]; then\n    echo -e \"${RED}Error: Invalid block height data. Retrying...${NC}\"\n    sleep 5\n    continue\n  fi\n  \n  # Calculate remaining blocks\n  blocks_left=$((network_height - local_height))\n  \n  # Sync status\n  if [ \"$blocks_left\" -eq 0 ]; then\n    sync_status=\"${GREEN}SYNCED${NC}\"\n  else\n    sync_status=\"${YELLOW}SYNCING${NC}\"\n  fi\n  \n  # Show status\n  echo -e \"${YELLOW}Node Height:${BLUE} $local_height${NC} | ${YELLOW}Network Height:${CYAN} $network_height${NC} | ${YELLOW}Blocks Left:${RED} $blocks_left${NC} | Status: $sync_status\"\n  \n  sleep 5\ndone\nEOF\n\n# Make script executable\nchmod +x ~/safro_sync_check.sh\n\n# Run\n~/safro_sync_check.sh\n```\n\nThe script updates every 5 seconds and shows you:\n- Node height\n- Network height\n- Remaining blocks\n- Sync status (SYNCED/SYNCING)\n\nUse `CTRL+C` to stop.\n\n### Other Useful Commands\n\n```bash\n# Sync status (one-time)\nsafrochaind status 2>&1 | jq .sync_info\n\n# Node ID\nsafrochaind tendermint show-node-id\n\n# Validator info\nsafrochaind tendermint show-validator\n\n# Peer count\ncurl -s localhost:${PORT_PREFIX}657/net_info | jq .result.n_peers\n\n# Connected peers\ncurl -s localhost:${PORT_PREFIX}657/net_info | jq -r '.result.peers[] | \"\\(.node_info.id)@\\(.remote_ip):\\(.node_info.listen_addr)\"' | awk -F ':' '{print $1\":\"$(NF)}'\n```\n\n## 🗳️ Governance\n\n```bash\n# List all proposals\nsafrochaind query gov proposals\n\n# View specific proposal\nsafrochaind query gov proposal <proposal_id>\n\n# Vote\nsafrochaind tx gov vote <proposal_id> <yes|no|no_with_veto|abstain> \\\n--chain-id safro-testnet-1 \\\n--gas-prices 0.0001usaf \\\n--gas-adjustment 1.5 \\\n--gas auto \\\n--from $WALLET_NAME \\\n-y\n```\n\n## 📝 Useful Commands\n\n### Alias Setup (For Easy Use)\n\n```bash\n# Create alias\necho 'alias safrochaind=\"LD_LIBRARY_PATH=/root/safrochain-node/lib /root/go/bin/safrochaind\"' >> ~/.bashrc\nsource ~/.bashrc\n\n# Now you can use directly:\nsafrochaind version\nsafrochaind status\n```\n\n### Log Management\n\n```bash\n# Last 100 lines\njournalctl -u safrochaind -n 100 --no-pager\n\n# Live log monitoring\njournalctl -fu safrochaind -o cat\n\n# Error logs\njournalctl -u safrochaind --no-pager | grep -i error\n```\n\n### Service Control\n\n```bash\n# Stop\nsudo systemctl stop safrochaind\n\n# Start\nsudo systemctl start safrochaind\n\n# Restart\nsudo systemctl restart safrochaind\n\n# Status\nsudo systemctl status safrochaind\n```\n\n## 🛠️ Troubleshooting\n\n### Problem: Binary Shows \"libwasmvm\" Error\n\n```bash\n# Check libwasmvm\nldd ~/go/bin/safrochaind | grep wasmvm\n\n# If you see a different path (e.g., /root/.lumera/lib/)\n# Binary is using another node's libwasmvm\n\n# Solution: Manual test\ncd ~/safrochain-node\nLD_LIBRARY_PATH=./lib ~/go/bin/safrochaind version\n# Should show v0.1.0\n```\n\n### Problem: Wrapper Script Not Working\n\nCheck if the wrapper script has segmentation fault:\n\n```bash\n# Check wrapper\ncat $HOME/.safrochain/cosmovisor/genesis/bin/safrochaind\n\n# Important: Do NOT use exec!\n# WRONG:\n# exec /root/go/bin/safrochaind \"$@\"\n\n# CORRECT:\n# LD_LIBRARY_PATH=./lib /root/go/bin/safrochaind \"$@\"\n\n# Fix wrapper\nrm $HOME/.safrochain/cosmovisor/genesis/bin/safrochaind\ncat > $HOME/.safrochain/cosmovisor/genesis/bin/safrochaind << 'EOF'\n#!/bin/bash\ncd /root/safrochain-node\nLD_LIBRARY_PATH=./lib /root/go/bin/safrochaind \"$@\"\nEOF\n\nchmod +x $HOME/.safrochain/cosmovisor/genesis/bin/safrochaind\n\n# Test\n$HOME/.safrochain/cosmovisor/genesis/bin/safrochaind version\n# Should show v0.1.0\n```\n\n### Problem: Port Already in Use\n\n```bash\n# Which process is using the port?\nsudo lsof -i:${PORT_PREFIX}656\n\n# Kill all safrochain processes\nsudo pkill -f safrochaind\n\n# Restart service\nsudo systemctl restart safrochaind\n```\n\n### Alternative: Direct Service Without Cosmovisor\n\nIf you're having issues with Cosmovisor:\n\n```bash\n# Stop Cosmovisor service\nsudo systemctl stop safrochaind\nsudo systemctl disable safrochaind\n\n# Create direct service\nsudo tee /etc/systemd/system/safrochaind.service > /dev/null <<EOF\n[Unit]\nDescription=Safrochain Node (Direct)\nAfter=network-online.target\n\n[Service]\nUser=root\nWorkingDirectory=/root/safrochain-node\nEnvironment=\"LD_LIBRARY_PATH=/root/safrochain-node/lib\"\nExecStart=/root/go/bin/safrochaind start\nRestart=on-failure\nRestartSec=10\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Start\nsudo systemctl daemon-reload\nsudo systemctl enable safrochaind\nsudo systemctl start safrochaind\n```\n\n### Sync Issues\n\n```bash\n# Update addrbook\nwget -O $HOME/.safrochain/config/addrbook.json https://vault2.astrostake.xyz/testnet/safrochain/addrbook.json\nsudo systemctl restart safrochaind\n\n# Reset node (last resort)\nsudo systemctl stop safrochaind\nsafrochaind tendermint unsafe-reset-all --home $HOME/.safrochain --keep-addr-book\nsudo systemctl start safrochaind\n```\n\n## 🗑️ Complete Node Removal\n\n```bash\n# Stop and remove service\nsudo systemctl stop safrochaind\nsudo systemctl disable safrochaind\nsudo rm -f /etc/systemd/system/safrochaind.service\nsudo systemctl daemon-reload\n\n# Remove Safrochain files\nrm -rf ~/.safrochain\nrm -rf ~/safrochain-node\nrm -f ~/go/bin/safrochaind\n\n# Remove alias\nsed -i '/safrochaind/d' ~/.bashrc\n\n# Clean variables\nsed -i '/MONIKER/d' ~/.bash_profile\nsed -i '/WALLET_NAME/d' ~/.bash_profile\nsed -i '/PORT_PREFIX/d' ~/.bash_profile\nsed -i '/SAFROCHAIN/d' ~/.bash_profile\n\n# Reload bash\nsource ~/.bashrc\nsource ~/.bash_profile\n\necho \"✅ Safrochain completely removed!\"\n```\n\n## ⚠️ Critical Notes\n\n1. **Go Version**: Definitely use Go 1.23.9\n2. **libwasmvm**: Use ONLY v2.0.1 (v2.2.4 or v1.x DO NOT WORK!)\n3. **Wrapper Script**: MANDATORY for Cosmovisor (don't use exec!)\n4. **LD_LIBRARY_PATH**: Should always point to `/root/safrochain-node/lib`\n5. **Binary Location**: Actual binary is `/root/go/bin/safrochaind`\n6. **Wrapper Location**: `/root/.safrochain/cosmovisor/genesis/bin/safrochaind`\n7. **Port Conflicts**: You may get \"port already in use\" error at first, it fixes after service restarts a few times\n\n## 🎯 Quick Test Commands\n\nCheck with these commands during installation:\n\n```bash\n# 1. Binary test\ncd ~/safrochain-node\nLD_LIBRARY_PATH=./lib ~/go/bin/safrochaind version\n# MUST see v0.1.0\n\n# 2. Wrapper test  \n$HOME/.safrochain/cosmovisor/genesis/bin/safrochaind version\n# MUST see v0.1.0\n\n# 3. Sync status (after service starts)\nsafrochaind status 2>&1 | jq .sync_info.catching_up\n# true = syncing, false = synced\n```\n\n## 📞 Support\n\n- **GitHub**: https://github.com/Safrochain-Org/safrochain-node\n- **Discord**: [Safrochain Discord](https://discord.gg/safrochain)\n- **Telegram**: [Safrochain Telegram](https://t.me/safrochain)\n\n---\n\n📅 **Last update**: 07.10.2025  \n✅ **Tested and working**  \n⚠️ **Warning**: This is a testnet project. Do not risk your main funds."
    }
  ],
  "projectInfo": {
    "name": "SafroChain",
    "logo": "https://raw.githubusercontent.com/coinsspor/coinsspor/refs/heads/main/safrologo.png",
    "banner": "https://raw.githubusercontent.com/coinsspor/coinsspor/refs/heads/main/safrobanner.jpeg",
    "description": "Loading documentation...",
    "theme": {
      "primary": "#10b981",
      "secondary": "#8b5cf6"
    }
  },
  "lastUpdated": "2025-10-07T19:04:59.368Z",
  "projectId": "safrochain",
  "version": "1.0.0"
}