{
  "documentation": [
    {
      "id": "section-1755119201508",
      "title": "0G Galileo Testnet",
      "icon": "💫",
      "type": "section",
      "children": [
        {
          "id": "page-1755119233098",
          "title": "Node Installation Guide",
          "icon": "📄",
          "type": "page",
          "content": "# 0G Galileo Testnet Node Installation Guide\n\n<div align=\"center\">\n\n![0G Network](https://img.shields.io/badge/0G-Galileo%20Testnet-blue)\n![Version](https://img.shields.io/badge/Version-v2.0.2-green)\n![Go](https://img.shields.io/badge/Go-1.21.3-00ADD8?logo=go)\n![License](https://img.shields.io/badge/License-MIT-yellow)\n\n</div>\n\n## 📖 Table of Contents\n- [System Requirements](#-system-requirements)\n- [Manual Installation](#-manual-installation)\n- [Node Management](#-node-management)\n- [Manual Upgrade](#-manual-upgrade)\n- [Delete Node](#-delete-node)\n- [Useful Commands](#-useful-commands)\n- [Troubleshooting](#-troubleshooting)\n\n## 💻 System Requirements\n\n### Recommended Hardware\n- **CPU**: 8 Cores\n- **RAM**: 64GB\n- **Storage**: 1TB (NVME SSD)\n- **OS**: Ubuntu 20.04+ LTS\n\n### Network Requirements\n- Stable internet connection\n- Public IP address\n- Open ports (will be configured during setup)\n\n## 🚀 Manual Installation\n\n### Step 1: Install Dependencies\n\nUpdate your system and install required packages:\n\n```bash\nsudo apt update && sudo apt upgrade -y\nsudo apt install curl git wget htop tmux build-essential jq make lz4 gcc unzip -y\n```\n\n### Step 2: Install Go\n\nInstall Go version 1.21.3:\n\n```bash\ncd $HOME\nVER=\"1.21.3\"\nwget \"https://golang.org/dl/go$VER.linux-amd64.tar.gz\"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf \"go$VER.linux-amd64.tar.gz\"\nrm \"go$VER.linux-amd64.tar.gz\"\n\n[ ! -f ~/.bash_profile ] && touch ~/.bash_profile\necho \"export PATH=$PATH:/usr/local/go/bin:~/go/bin\" >> ~/.bash_profile\nsource $HOME/.bash_profile\n[ ! -d ~/go/bin ] && mkdir -p ~/go/bin\n```\n\n### Step 3: Set Environment Variables\n\n> ⚠️ **Important**: Replace `test` with your desired node name (moniker)\n\n```bash\necho \"export MONIKER=\\\"test\\\"\" >> $HOME/.bash_profile\necho \"export OG_PORT=\\\"47\\\"\" >> $HOME/.bash_profile\necho 'export PATH=$PATH:$HOME/galileo-used/bin' >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n```\n\n> 💡 **Note**: You can change `OG_PORT` to a different value if port 47 is already in use\n\n### Step 4: Download and Setup Binaries\n\n```bash\ncd $HOME\nrm -rf galileo\nwget -O galileo.tar.gz https://github.com/0glabs/0gchain-NG/releases/download/v2.0.2/galileo-v2.0.2.tar.gz\ntar -xzvf galileo.tar.gz -C $HOME\nrm -rf $HOME/galileo.tar.gz\nmv galileo-v2.0.2 galileo\nchmod +x $HOME/galileo/bin/geth\nchmod +x $HOME/galileo/bin/0gchaind\ncp $HOME/galileo/bin/geth $HOME/go/bin/geth\ncp $HOME/galileo/bin/0gchaind $HOME/go/bin/0gchaind\nmv $HOME/galileo $HOME/galileo-used\n```\n\n### Step 5: Create Configuration Directory\n\n```bash\nmkdir -p $HOME/.0gchaind\ncp -r $HOME/galileo-used/0g-home $HOME/.0gchaind\n```\n\n### Step 6: Initialize Geth\n\n```bash\ngeth init --datadir $HOME/.0gchaind/0g-home/geth-home $HOME/galileo-used/genesis.json\n```\n\n### Step 7: Initialize 0gchaind\n\n```bash\n0gchaind init $MONIKER --home $HOME/.0gchaind/tmp\nmv $HOME/.0gchaind/tmp/data/priv_validator_state.json $HOME/.0gchaind/0g-home/0gchaind-home/data/\nmv $HOME/.0gchaind/tmp/config/node_key.json $HOME/.0gchaind/0g-home/0gchaind-home/config/\nmv $HOME/.0gchaind/tmp/config/priv_validator_key.json $HOME/.0gchaind/0g-home/0gchaind-home/config/\nrm -rf $HOME/.0gchaind/tmp\n```\n\n### Step 8: Configure Node Settings\n\nSet moniker in config:\n```bash\nsed -i -e \"s/^moniker *=.*/moniker = \\\"$MONIKER\\\"/\" $HOME/.0gchaind/0g-home/0gchaind-home/config/config.toml\n```\n\nConfigure custom ports for Geth:\n```bash\nsed -i \"s/HTTPPort = .*/HTTPPort = ${OG_PORT}545/\" $HOME/galileo-used/geth-config.toml\nsed -i \"s/WSPort = .*/WSPort = ${OG_PORT}546/\" $HOME/galileo-used/geth-config.toml\nsed -i \"s/AuthPort = .*/AuthPort = ${OG_PORT}551/\" $HOME/galileo-used/geth-config.toml\nsed -i \"s/ListenAddr = .*/ListenAddr = \\\":${OG_PORT}303\\\"/\" $HOME/galileo-used/geth-config.toml\nsed -i \"s/^# *Port = .*/# Port = ${OG_PORT}901/\" $HOME/galileo-used/geth-config.toml\nsed -i \"s/^# *InfluxDBEndpoint = .*/# InfluxDBEndpoint = \\\"http:\\/\\/localhost:${OG_PORT}086\\\"/\" $HOME/galileo-used/geth-config.toml\n```\n\n### Step 9: Set Seeds and Peers\n\n```bash\nPEERS=3a11d0b48d7c477d133f959efb33d47d81aeae6d@og-testnet-peer.itrocket.net:47656\nSEEDS=cfa49d6db0c9065e974bfdbc9e0f55712ee2b0b9@og-testnet-seed.itrocket.net:47656\nsed -i -e \"/^\\[p2p\\]/,/^\\[/{s/^[[:space:]]*persistent_peers *=.*/persistent_peers = \\\"$PEERS\\\"/}\" $HOME/.0gchaind/0g-home/0gchaind-home/config/config.toml\nsed -i -e \"/^\\[p2p\\]/,/^\\[/{s/^[[:space:]]*seeds *=.*/seeds = \\\"$SEEDS\\\"/}\" $HOME/.0gchaind/0g-home/0gchaind-home/config/config.toml\n```\n\n### Step 10: Configure Custom Ports\n\n```bash\nsed -i.bak -e \"s%:26658%:${OG_PORT}658%g;\ns%:26657%:${OG_PORT}657%g;\ns%:6060%:${OG_PORT}060%g;\ns%:26656%:${OG_PORT}656%g;\ns%:26660%:${OG_PORT}660%g\" $HOME/.0gchaind/0g-home/0gchaind-home/config/config.toml\n\nsed -i \"s/address = \\\".*:3500\\\"/address = \\\"127\\.0\\.0\\.1:${OG_PORT}500\\\"/\" $HOME/.0gchaind/0g-home/0gchaind-home/config/app.toml\nsed -i \"s/^rpc-dial-url *=.*/rpc-dial-url = \\\"http:\\/\\/localhost:${OG_PORT}551\\\"/\" $HOME/.0gchaind/0g-home/0gchaind-home/config/app.toml\n```\n\n### Step 11: Optimize Node Settings\n\nDisable indexer:\n```bash\nsed -i -e \"s/^indexer *=.*/indexer = \\\"null\\\"/\" $HOME/.0gchaind/0g-home/0gchaind-home/config/config.toml\n```\n\nConfigure pruning:\n```bash\nsed -i -e \"s/^pruning *=.*/pruning = \\\"custom\\\"/\" $HOME/.0gchaind/0g-home/0gchaind-home/config/app.toml\nsed -i -e \"s/^pruning-keep-recent *=.*/pruning-keep-recent = \\\"100\\\"/\" $HOME/.0gchaind/0g-home/0gchaind-home/config/app.toml\nsed -i -e \"s/^pruning-interval *=.*/pruning-interval = \\\"19\\\"/\" $HOME/.0gchaind/0g-home/0gchaind-home/config/app.toml\n```\n\nCreate symbolic link:\n```bash\nln -sf $HOME/.0gchaind/0g-home/0gchaind-home/config/client.toml $HOME/.0gchaind/config/client.toml\n```\n\n### Step 12: Create Systemd Services\n\n#### Create 0ggeth Service\n\n```bash\nsudo tee /etc/systemd/system/0ggeth.service > /dev/null <<EOF\n[Unit]\nDescription=0g Geth Node Service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nWorkingDirectory=$HOME/galileo-used\nExecStart=$HOME/go/bin/geth \\\n    --config $HOME/galileo-used/geth-config.toml \\\n    --datadir $HOME/.0gchaind/0g-home/geth-home \\\n    --networkid 16601 \\\n    --http.port ${OG_PORT}545 \\\n    --ws.port ${OG_PORT}546 \\\n    --authrpc.port ${OG_PORT}551 \\\n    --bootnodes enode://de7b86d8ac452b1413983049c20eafa2ea0851a3219c2cc12649b971c1677bd83fe24c5331e078471e52a94d95e8cde84cb9d866574fec957124e57ac6056699@8.218.88.60:30303 \\\n    --port ${OG_PORT}303\nRestart=always\nRestartSec=3\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n\n#### Create 0gchaind Service\n\n```bash\nsudo tee /etc/systemd/system/0gchaind.service > /dev/null <<EOF\n[Unit]\nDescription=0gchaind Node Service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nWorkingDirectory=$HOME/galileo-used\nExecStart=$(which 0gchaind) start \\\n--rpc.laddr tcp://0.0.0.0:${OG_PORT}657 \\\n--chaincfg.chain-spec devnet \\\n--chaincfg.kzg.trusted-setup-path $HOME/galileo-used/kzg-trusted-setup.json \\\n--chaincfg.engine.jwt-secret-path $HOME/galileo-used/jwt-secret.hex \\\n--chaincfg.kzg.implementation=crate-crypto/go-kzg-4844 \\\n--chaincfg.block-store-service.enabled \\\n--chaincfg.node-api.enabled \\\n--chaincfg.node-api.logging \\\n--chaincfg.node-api.address 0.0.0.0:${OG_PORT}500 \\\n--chaincfg.engine.rpc-dial-url http://localhost:${OG_PORT}551 \\\n--pruning=nothing \\\n--p2p.seeds 85a9b9a1b7fa0969704db2bc37f7c100855a75d9@8.218.88.60:26656 \\\n--p2p.external_address $(wget -qO- eth0.me):${OG_PORT}656 \\\n--home $HOME/.0gchaind/0g-home/0gchaind-home \\\n--chaincfg.restaking.enabled \\\n--chaincfg.restaking.symbiotic-rpc-dial-url https://ethereum-holesky-rpc.publicnode.com \\\n--chaincfg.restaking.symbiotic-get-logs-block-range 1\nRestart=always\nRestartSec=3\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n\n### Step 13: Start Services\n\n```bash\n# Enable and start services\nsudo systemctl daemon-reload\nsudo systemctl enable 0ggeth\nsudo systemctl restart 0ggeth\nsudo systemctl enable 0gchaind\nsudo systemctl restart 0gchaind\n\n# Check logs\nsudo journalctl -u 0gchaind -u 0ggeth -f --no-hostname -o cat\n```\n\n## 🔧 Node Management\n\n### Check Service Status\n\n```bash\n# Check 0ggeth status\nsudo systemctl status 0ggeth\n\n# Check 0gchaind status\nsudo systemctl status 0gchaind\n```\n\n### View Logs\n\n```bash\n# View both services logs\nsudo journalctl -u 0gchaind -u 0ggeth -f --no-hostname -o cat\n\n# View 0ggeth logs only\nsudo journalctl -u 0ggeth -f\n\n# View 0gchaind logs only\nsudo journalctl -u 0gchaind -f\n```\n\n### Stop Services\n\n```bash\nsudo systemctl stop 0gchaind 0ggeth\n```\n\n### Restart Services\n\n```bash\nsudo systemctl restart 0ggeth\nsudo systemctl restart 0gchaind\n```\n\n## ⬆️ Manual Upgrade\n\nTo upgrade your node to a new version:\n\n```bash\n# Stop services\nsudo systemctl stop 0gchaind 0ggeth\n\n# Download new version\ncd\nrm -rf bin\nmkdir $HOME/bin\ncd bin\nwget \"https://github.com/0glabs/0gchain-NG/releases/download/v2.0.2/galileo-v2.0.2.tar.gz\"\ntar -xvzf galileo-v2.0.2.tar.gz\ncd galileo-v2.0.2\nchmod +x $HOME/bin/galileo-v2.0.2/bin/0gchaind $HOME/bin/galileo-v2.0.2/bin/geth\ncp $HOME/bin/galileo-v2.0.2/bin/0gchaind $(which 0gchaind)\ncp $HOME/bin/galileo-v2.0.2/bin/geth $(which geth)\n\n# Update 0gchaind systemd file (if needed)\nsudo tee /etc/systemd/system/0gchaind.service > /dev/null <<EOF\n[Unit]\nDescription=0gchaind Node Service\nAfter=network-online.target\n\n[Service]\nUser=$USER\nWorkingDirectory=$HOME/galileo-used\nExecStart=$(which 0gchaind) start \\\n--rpc.laddr tcp://0.0.0.0:${OG_PORT}657 \\\n--chaincfg.chain-spec devnet \\\n--chaincfg.kzg.trusted-setup-path $HOME/galileo-used/kzg-trusted-setup.json \\\n--chaincfg.engine.jwt-secret-path $HOME/galileo-used/jwt-secret.hex \\\n--chaincfg.kzg.implementation=crate-crypto/go-kzg-4844 \\\n--chaincfg.block-store-service.enabled \\\n--chaincfg.node-api.enabled \\\n--chaincfg.node-api.logging \\\n--chaincfg.node-api.address 0.0.0.0:${OG_PORT}500 \\\n--chaincfg.engine.rpc-dial-url http://localhost:${OG_PORT}551 \\\n--pruning=nothing \\\n--p2p.seeds 85a9b9a1b7fa0969704db2bc37f7c100855a75d9@8.218.88.60:26656 \\\n--p2p.external_address $(wget -qO- eth0.me):${OG_PORT}656 \\\n--home $HOME/.0gchaind/0g-home/0gchaind-home \\\n--chaincfg.restaking.enabled \\\n--chaincfg.restaking.symbiotic-rpc-dial-url https://ethereum-holesky-rpc.publicnode.com \\\n--chaincfg.restaking.symbiotic-get-logs-block-range 1\nRestart=always\nRestartSec=3\nLimitNOFILE=65535\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Restart services\nsudo systemctl daemon-reload\nsudo systemctl restart 0ggeth\nsudo systemctl restart 0gchaind && sudo journalctl -u 0gchaind -f\n```\n\n## 🗑️ Delete Node\n\nTo completely remove the node from your system:\n\n```bash\n# Stop and disable services\nsudo systemctl stop 0gchaind 0ggeth\nsudo systemctl disable 0gchaind 0ggeth\n\n# Remove data directory\nrm -rf $HOME/.0gchaind\n\n# Remove service files\nsudo rm /etc/systemd/system/0gchaind.service /etc/systemd/system/0ggeth.service\n\n# Reload systemd\nsudo systemctl daemon-reload\n```\n\n## 📝 Useful Commands\n\n### Check Node Sync Status\n\n```bash\n# Check 0gchaind sync status\n0gchaind status 2>&1 | jq .SyncInfo\n\n# Check if node is catching up\n0gchaind status 2>&1 | jq .SyncInfo.catching_up\n```\n\n### Check Node Info\n\n```bash\n# Get node ID\n0gchaind tendermint show-node-id\n\n# Get validator info\n0gchaind tendermint show-validator\n```\n\n### Check Ports\n\n```bash\n# List all listening ports\nss -tulpn | grep LISTEN\n```\n\n### Monitor System Resources\n\n```bash\n# Check CPU and Memory usage\nhtop\n\n# Check disk usage\ndf -h\n\n# Check network connections\nnetstat -tnp | grep ESTABLISHED\n```\n\n## 🆘 Troubleshooting\n\n### Common Issues and Solutions\n\n#### 1. Node Not Starting\n- Check logs: `sudo journalctl -u 0gchaind -u 0ggeth -f`\n- Verify Go installation: `go version`\n- Check disk space: `df -h`\n- Ensure all ports are available\n\n#### 2. Sync Issues\n- Check peers: `curl -s localhost:${OG_PORT}657/net_info | jq .result.n_peers`\n- Verify genesis file is correct\n- Ensure proper network connectivity\n\n#### 3. Port Already in Use\n- Change `OG_PORT` variable to a different value\n- Re-run port configuration commands\n- Restart services\n\n#### 4. Permission Denied Errors\n- Ensure proper file permissions\n- Check user ownership of directories\n- Run commands with appropriate privileges\n\n## 📚 Resources\n\n- **Official Documentation**: [0G Labs GitHub](https://github.com/0glabs/0gchain-NG)\n- **Testnet Explorer**: Check official channels for explorer links\n- **Community Support**: Join official Discord/Telegram for support\n\n## 🔒 Security Recommendations\n\n1. **Firewall Configuration**: Only open necessary ports\n2. **Regular Updates**: Keep your system and node software updated\n3. **Backup Keys**: Always backup your validator keys securely\n4. **Monitor Performance**: Regularly check node performance and logs\n5. **Use SSH Keys**: Disable password authentication for SSH\n\n## 📊 Port Summary\n\nDefault ports used (with base port 47):\n- **P2P**: 47656\n- **RPC**: 47657\n- **API**: 47500\n- **Geth HTTP**: 47545\n- **Geth WS**: 47546\n- **Geth Auth**: 47551\n- **Geth P2P**: 47303\n\n---\n\n<div align=\"center\">\n\n**Made with ❤️ for 0G Community**\n\n*Last Updated: 2025*\n\n</div>"
        }
      ]
    }
  ],
  "projectInfo": {
    "name": "0g Galileo Testnet",
    "logo": "https://raw.githubusercontent.com/coinsspor/coinsspor/refs/heads/main/0glogo.jpg",
    "banner": "https://raw.githubusercontent.com/coinsspor/coinsspor/refs/heads/main/0gbabbmer.jpg",
    "description": "0g Galileo Testnet",
    "theme": {
      "primary": "#10b981",
      "secondary": "#8b5cf6"
    }
  },
  "lastUpdated": "2025-08-13T21:07:38.233Z",
  "projectId": "celestia-testnet",
  "version": "1.0.0"
}